diff --git a/drivers/dma/xilinx/xilinx_dma.c b/drivers/dma/xilinx/xilinx_dma.c
index 9b1f01bdf873..6d95efec535a 100644
--- a/drivers/dma/xilinx/xilinx_dma.c
+++ b/drivers/dma/xilinx/xilinx_dma.c
@@ -1037,7 +1037,8 @@ static void xilinx_dma_start(struct xilinx_dma_chan *chan)
 	int err;
 	u32 val;
 
-	dma_ctrl_set(chan, XILINX_DMA_REG_DMACR, XILINX_DMA_DMACR_RUNSTOP);
+    // depctg: always enable intrupt here
+	dma_ctrl_set(chan, XILINX_DMA_REG_DMACR, XILINX_DMA_DMACR_RUNSTOP | XILINX_DMA_DMAXR_ALL_IRQ_MASK);
 
 	/* Wait for the hardware to start */
 	err = xilinx_dma_poll_timeout(chan, XILINX_DMA_REG_DMASR, val,
@@ -1285,6 +1286,7 @@ static void xilinx_dma_start_transfer(struct xilinx_dma_chan *chan)
 		reg &= ~XILINX_DMA_CR_COALESCE_MAX;
 		reg |= chan->desc_pendingcount <<
 				  XILINX_DMA_CR_COALESCE_SHIFT;
+        // depctg: enable interrupt here
 		dma_ctrl_write(chan, XILINX_DMA_REG_DMACR, reg);
 	}
 
@@ -1407,13 +1409,14 @@ static int xilinx_dma_chan_reset(struct xilinx_dma_chan *chan)
 
 	/* Reset VDMA */
 	err = xilinx_dma_reset(chan);
-	if (err)
-		return err;
 
 	/* Enable interrupts */
 	dma_ctrl_set(chan, XILINX_DMA_REG_DMACR,
 		      XILINX_DMA_DMAXR_ALL_IRQ_MASK);
 
+	if (err)
+		return err;
+
 	return 0;
 }
 
@@ -2048,9 +2051,9 @@ static int xilinx_dma_terminate_all(struct dma_chan *dchan)
 	if (!chan->cyclic) {
 		err = chan->stop_transfer(chan);
 		if (err) {
-			dev_err(chan->dev, "Cannot stop channel %p: %x\n",
-				chan, dma_ctrl_read(chan,
-				XILINX_DMA_REG_DMASR));
+		// 	dev_err(chan->dev, "MODIFIED: Cannot stop channel %p: %x\n",
+		// 		chan, dma_ctrl_read(chan,
+		// 		XILINX_DMA_REG_DMASR));
 			chan->err = true;
 		}
 	}
